services:
  #=================================================#
  #               MinIO (S3 storage)                #
  #=================================================#
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data
    networks:
      - iceberg_net

  mc:
    image: minio/mc:latest
    container_name: mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set local http://minio:9000 admin password) do echo '...waiting for minio...' && sleep 1; done;
      /usr/bin/mc rm -r --force local/warehouse;
      /usr/bin/mc mb local/warehouse;
      /usr/bin/mc anonymous set public local/warehouse;
      tail -f /dev/null;
      "
    networks:
      - iceberg_net

  #=================================================#
  #                  Nessie Catalog                 #
  #=================================================#
  nessie:
    image: projectnessie/nessie:latest
    container_name: nessie
    ports:
      - "19120:19120"
    environment:
      - QUARKUS_PROFILE=docker
      - QUARKUS_HTTP_PORT=19120
    depends_on:
      - minio
    networks:
      - iceberg_net

  #=================================================#
  #              Spark Master (with SC)             #
  #=================================================#
  spark-master:
    image: bitnami/spark:3.5.5
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_CONNECT_GRPC_BINDING=0.0.0.0:15002
    ports:
      - "7077:7077"
      - "8080:8080"
      - "15002:15002"  # Spark Connect gRPC
    volumes:
      - ./jars:/opt/spark/jars
      - ./spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
    networks:
      - iceberg_net

  #=================================================#
  #                   Spark Worker                  #
  #=================================================#
  spark-worker:
    image: bitnami/spark:3.5.5
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2g
      - SPARK_WORKER_CORES=1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    volumes:
      - ./jars:/opt/spark/jars
      - ./spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
    networks:
      - iceberg_net

  #=================================================#
  #                    Doris FE                     #
  #=================================================#
  doris-fe:
    image: apache/doris:fe-3.0.7
    container_name: doris-fe
    ports:
      - "8030:8030"  # MySQL protocol
      - "8038:8038"  # HTTP REST API
      - "9010:9010"  # heartbeat
    environment:
      - DORIS_ROLE=fe
      - FE_ID=1
      - FE_DEPLOY_MODE=local
      - FE_QUERY_PORT=8030
      - FE_HTTP_PORT=8038
      - FE_RPC_PORT=9010
      - FE_SERVERS=fe1:doris-fe:9010
    command: ["fe", "--daemon"]
    volumes:
      - doris_fe_meta:/opt/apache-doris/fe/meta
      - ./jars:/opt/doris/jars
    networks:
      - iceberg_net

  #=================================================#
  #                    Doris BE                     #
  #=================================================#
  doris-be:
    image: apache/doris:be-3.0.7
    container_name: doris-be
    depends_on:
      - doris-fe
    ports:
      - "8040:8040"  # heartbeat
    environment:
      - DORIS_ROLE=be
      - BE_ADDR=doris-be
      - FE_SERVERS=fe1:doris-fe:8030
    command: ["be", "--daemon"]
    volumes:
      - doris_be_storage:/opt/apache-doris/be/storage
      - ./jars:/opt/doris/jars
    networks:
      - iceberg_net

volumes:
  minio_data:
  doris_fe_meta:
  doris_be_storage:

networks:
  iceberg_net:
    driver: bridge
